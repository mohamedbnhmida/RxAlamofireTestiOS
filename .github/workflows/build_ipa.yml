name: Build & Package iOS App as IPA

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

jobs:
  package-ipa:
    runs-on: self-hosted
    name: Build & Package iOS App as IPA 

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Decode GoogleService-Info.plist (if applicable)
      - name: Decode GoogleService-Info.plist
        run: |
          base64 --decode -i encoded_plist.txt -o GoogleService-Info.plist
          
      # Step 3: Verify GoogleService-Info.plist
      - name: Verify GoogleService-Info.plist
        run: ls -a

      # Step 4: Run SwiftLint
      - name: Run SwiftLint
        run: | 
          swiftlint lint | while IFS= read -r line; do
              if [[ $line == *"warning"* ]]; then
                  echo -e "‚ö†Ô∏è  \033[33m$line\033[0m"  # Yellow for warnings
              elif [[ $line == *"error"* ]]; then
                  echo -e "üî¥ \033[31m$line\033[0m"  # Red for errors
              else
                  echo "$line"  # Default for other lines
              fi
          done

      # Step 5: Build the iOS App for Generic iOS Device
      - name: Build iOS App
        run: |
          xcodebuild -workspace RxAlamofire.xcworkspace \
                     -scheme RxAlamofire \
                     -sdk iphonesimulator \
                     -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.1' \
                     clean build \
                     CODE_SIGN_STYLE=Automatic
      
      # Step 6: Locate the .app file in DerivedData
      - name: Locate .app file
        id: locate_app
        run: |
          # Find the most recent DerivedData folder
          DERIVED_DATA_PATH=$(find ~/Library/Developer/Xcode/DerivedData -type d -name "RxAlamofire*" | head -n 1)

          if [ -z "$DERIVED_DATA_PATH" ]; then
            echo "Error: DerivedData folder not found."
            exit 1
          fi

          # Find the .app file in DerivedData
          APP_PATH=$(find "$DERIVED_DATA_PATH/Build/Products" -name "RxAlamofire.app" | head -n 1)

          if [ -z "$APP_PATH" ]; then
            echo "Error: .app file not found in DerivedData."
            exit 1
          fi

          echo "App Path: $APP_PATH"
          echo "::set-output name=app_path::$APP_PATH"

      # Step 7: Package the .app into an .ipa
      - name: Package .app into .ipa
        run: |
          APP_PATH=${{ steps.locate_app.outputs.app_path }}
          PAYLOAD_PATH="Payload"
          IPA_NAME="RxAlamofire.ipa"

          # Verify .app exists
          if [ ! -d "$APP_PATH" ]; then
            echo "Error: .app file not found at $APP_PATH"
            exit 1
          fi

          # Create Payload folder and move .app into it
          mkdir -p $PAYLOAD_PATH
          cp -R "$APP_PATH" $PAYLOAD_PATH/

          # Compress Payload folder to .ipa
          zip -r "$IPA_NAME" "$PAYLOAD_PATH"

          # Cleanup
          rm -rf $PAYLOAD_PATH

          echo "IPA created: $IPA_NAME"

      # Step 8: Copy the .ipa file to Desktop
      - name: Copy IPA to Desktop
        run: |
          DESKTOP_PATH=~/Desktop
          IPA_NAME="RxAlamofire.ipa"

          # Verify the IPA exists
          if [ ! -f "$IPA_NAME" ]; then
            echo "Error: .ipa file not found: $IPA_NAME"
            exit 1
          fi

          # Copy the IPA to the Desktop
          cp "$IPA_NAME" "$DESKTOP_PATH/"
          echo "Copied $IPA_NAME to $DESKTOP_PATH"
      # Step 9: Deploy to Firebase App Distribution
      - name: Deploy to Firebase App Distribution 
        run: |
          IPA_NAME="RxAlamofire.ipa"
          APP_ID="1:637313294823:ios:ffb13f112f53f029bf9d42" # Replace with your Firebase App ID

          # Verify the IPA exists
          if [ ! -f "$IPA_NAME" ]; then
            echo "Error: .ipa file not found: $IPA_NAME"
            exit 1
          fi

          # Deploy to Firebase
          firebase appdistribution:distribute "$IPA_NAME" \
            --app "$APP_ID" \
            --groups "testers" \
            --token "1//09XF99ZH64mrdCgYIARAAGAkSNgF-L9Irh4ClxaeyYRfJ7Q_ymW7W8T3QmxpPj1YVC4u2d4jaO3kFMOkKQcq8pJ2qAYIXk8qXMg"
